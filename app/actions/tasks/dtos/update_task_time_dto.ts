/**
 * DTO cho vi·ªác c·∫≠p nh·∫≠t th·ªùi gian c·ªßa task
 *
 * Validates:
 * - task_id: ID c·ªßa task, b·∫Øt bu·ªôc
 * - estimated_time: Th·ªùi gian ∆∞·ªõc t√≠nh (gi·ªù), optional
 * - actual_time: Th·ªùi gian th·ª±c t·∫ø (gi·ªù), optional
 *
 * Note: √çt nh·∫•t m·ªôt trong hai field ph·∫£i ƒë∆∞·ª£c provide
 */
export default class UpdateTaskTimeDTO {
  public readonly task_id: number
  public readonly estimated_time?: number
  public readonly actual_time?: number

  constructor(data: { task_id: number; estimated_time?: number; actual_time?: number }) {
    // Validate task_id
    if (!data.task_id || data.task_id <= 0) {
      throw new Error('ID task l√† b·∫Øt bu·ªôc')
    }

    // At least one time field must be provided
    if (data.estimated_time === undefined && data.actual_time === undefined) {
      throw new Error(
        'Ph·∫£i cung c·∫•p √≠t nh·∫•t m·ªôt trong hai: th·ªùi gian ∆∞·ªõc t√≠nh ho·∫∑c th·ªùi gian th·ª±c t·∫ø')
    }

    // Validate estimated_time if provided
    if (data.estimated_time !== undefined) {
      if (data.estimated_time < 0) {
        throw new Error('Th·ªùi gian ∆∞·ªõc t√≠nh kh√¥ng ƒë∆∞·ª£c √¢m')
      }

      if (data.estimated_time > 999) {
        throw new Error('Th·ªùi gian ∆∞·ªõc t√≠nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 999 gi·ªù')
      }
    }

    // Validate actual_time if provided
    if (data.actual_time !== undefined) {
      if (data.actual_time < 0) {
        throw new Error('Th·ªùi gian th·ª±c t·∫ø kh√¥ng ƒë∆∞·ª£c √¢m')
      }

      if (data.actual_time > 999) {
        throw new Error('Th·ªùi gian th·ª±c t·∫ø kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 999 gi·ªù')
      }
    }

    this.task_id = data.task_id
    this.estimated_time = data.estimated_time
    this.actual_time = data.actual_time
  }

  /**
   * Ki·ªÉm tra xem c√≥ c·∫≠p nh·∫≠t estimated_time kh√¥ng
   */
  public hasEstimatedTimeUpdate(): boolean {
    return this.estimated_time !== undefined
  }

  /**
   * Ki·ªÉm tra xem c√≥ c·∫≠p nh·∫≠t actual_time kh√¥ng
   */
  public hasActualTimeUpdate(): boolean {
    return this.actual_time !== undefined
  }

  /**
   * Ki·ªÉm tra xem actual_time c√≥ v∆∞·ª£t qu√° estimated_time kh√¥ng
   * Ch·ªâ check ƒë∆∞·ª£c n·∫øu c·∫£ hai ƒë·ªÅu ƒë∆∞·ª£c provide
   */
  public isOverEstimate(): boolean | null {
    if (this.estimated_time === undefined || this.actual_time === undefined) {
      return null
    }

    return this.actual_time > this.estimated_time
  }

  /**
   * T√≠nh % th·ªùi gian th·ª±c t·∫ø so v·ªõi ∆∞·ªõc t√≠nh
   * Return null n·∫øu kh√¥ng ƒë·ªß d·ªØ li·ªáu
   */
  public getCompletionPercentage(): number | null {
    if (this.estimated_time === undefined || this.actual_time === undefined) {
      return null
    }

    if (this.estimated_time === 0) {
      return null
    }

    return Math.round((this.actual_time / this.estimated_time) * 100)
  }

  /**
   * L·∫•y message audit log
   */
  public getAuditMessage(): string {
    const updates: string[] = []

    if (this.hasEstimatedTimeUpdate()) {
      updates.push(`th·ªùi gian ∆∞·ªõc t√≠nh: ${this.estimated_time}h`)
    }

    if (this.hasActualTimeUpdate()) {
      updates.push(`th·ªùi gian th·ª±c t·∫ø: ${this.actual_time}h`)
    }

    return `C·∫≠p nh·∫≠t th·ªùi gian task (${updates.join(', ')})`
  }

  /**
   * Convert DTO th√†nh object ƒë·ªÉ c·∫≠p nh·∫≠t database
   */
  public toObject(): Record<string, any> {
    const updates: Record<string, any> = {}

    if (this.hasEstimatedTimeUpdate()) {
      updates.estimated_time = this.estimated_time
    }

    if (this.hasActualTimeUpdate()) {
      updates.actual_time = this.actual_time
    }

    return updates
  }

  /**
   * L·∫•y th√¥ng b√°o v·ªÅ hi·ªáu su·∫•t (n·∫øu c√≥ ƒë·ªß d·ªØ li·ªáu)
   */
  public getPerformanceMessage(): string | null {
    const percentage = this.getCompletionPercentage()

    if (percentage === null) {
      return null
    }

    if (percentage <= 80) {
      return 'üéâ Ho√†n th√†nh nhanh h∆°n d·ª± ki·∫øn!'
    } else if (percentage <= 100) {
      return '‚úÖ Ho√†n th√†nh ƒë√∫ng th·ªùi gian d·ª± ki·∫øn'
    } else if (percentage <= 120) {
      return '‚ö†Ô∏è V∆∞·ª£t th·ªùi gian d·ª± ki·∫øn m·ªôt ch√∫t'
    } else {
      return '‚ùó V∆∞·ª£t th·ªùi gian d·ª± ki·∫øn ƒë√°ng k·ªÉ'
    }
  }
}
